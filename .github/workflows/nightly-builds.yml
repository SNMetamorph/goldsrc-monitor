name: nightly-builds
on: push

jobs:
  build-windows:
    runs-on: windows-2019
    strategy:
      matrix:
        conf: [Release]
    env:
      BUILD_TYPE: ${{ matrix.conf }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Create build environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        shell: bash
        working-directory: ${{github.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019" -A win32

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config $BUILD_TYPE

      - name: Prepare artifacts
        run: |
          mkdir publish\
          move build\${{env.BUILD_TYPE}}\bin\gsm-library.dll publish\gsm-library.dll
          move build\${{env.BUILD_TYPE}}\bin\gsm-loader.exe publish\gsm-loader.exe
          move resources\program_dir\*.* publish\

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Windows
          path: |
            publish/*

  release:
    name: release-builds
    runs-on: ubuntu-latest
    needs: [build-windows]
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Fetch artifacts
        uses: actions/download-artifact@v3.0.1

      - name: Remove old release
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true
          tag_name: continuous
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Repackage binaries and allow GitHub to process removed release for few seconds
        run: |
          cd Windows
          zip -r ../goldsrc-monitor-win32.zip *
          sleep 20s

      - name: Upload new release
        uses: softprops/action-gh-release@v0.1.15
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: goldsrc-monitor*
          tag_name: continuous
          draft: false
          prerelease: true
          name: GoldSrc Monitor Continuous Build
